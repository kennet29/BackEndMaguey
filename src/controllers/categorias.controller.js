import Categoria from "../models/Categoria.js";

// üìå Crear categor√≠a
export const createCategoria = async (req, res) => {
  try {
    const { nombre, descripcion } = req.body;

    // ‚úÖ Validar campos obligatorios
    if (!nombre || !descripcion) {
      return res.status(400).json({ message: "El nombre y la descripci√≥n son requeridos" });
    }

    const categoria = new Categoria({ nombre, descripcion });
    await categoria.save();

    res.status(201).json(categoria);
  } catch (error) {
    res.status(500).json({ message: "Error al crear la categor√≠a", error: error.message });
  }
};

// üìå Obtener todas las categor√≠as
export const getCategorias = async (req, res) => {
  try {
    const categorias = await Categoria.find().sort({ createdAt: -1 });
    res.status(200).json(categorias);
  } catch (error) {
    res.status(500).json({ message: "Error al obtener las categor√≠as", error: error.message });
  }
};

// üìå Obtener categor√≠a por ID
export const getCategoriaById = async (req, res) => {
  try {
    const categoria = await Categoria.findById(req.params.id);
    if (!categoria) {
      return res.status(404).json({ message: "Categor√≠a no encontrada" });
    }
    res.status(200).json(categoria);
  } catch (error) {
    res.status(500).json({ message: "Error al obtener la categor√≠a", error: error.message });
  }
};

// üìå Actualizar categor√≠a
export const updateCategoria = async (req, res) => {
  try {
    const { nombre, descripcion } = req.body;

    const categoria = await Categoria.findByIdAndUpdate(
      req.params.id,
      { nombre, descripcion },
      { new: true }
    );

    if (!categoria) {
      return res.status(404).json({ message: "Categor√≠a no encontrada" });
    }

    res.status(200).json(categoria);
  } catch (error) {
    res.status(500).json({ message: "Error al actualizar la categor√≠a", error: error.message });
  }
};

// üìå Eliminar categor√≠a
export const deleteCategoria = async (req, res) => {
  try {
    const categoria = await Categoria.findByIdAndDelete(req.params.id);
    if (!categoria) {
      return res.status(404).json({ message: "Categor√≠a no encontrada" });
    }
    res.status(200).json({ message: "Categor√≠a eliminada correctamente" });
  } catch (error) {
    res.status(500).json({ message: "Error al eliminar la categor√≠a", error: error.message });
  }
};
